on:
  release:
    # run only on published, not for drafts
    types: [published]
  pull_request:
  workflow_dispatch:

env:
  flags: --release --out dist --manifest-path pineappl_py/Cargo.toml

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: ${{ env.flags }} --interpreter 3.7 3.8 3.9 3.10 3.11 pypy3.8
          manylinux: auto
            #- name: Upload wheels
            #  uses: actions/upload-artifact@v3
            #  with:
            #    name: wheels
            #    path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: ${{ env.flags }} --interpreter 3.7 3.8 3.9 3.10 3.11
            #- name: Upload wheels
            #  uses: actions/upload-artifact@v3
            #  with:
            #    name: wheels
            #    path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [universal2-apple-darwin]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: ${{ env.flags }} --interpreter 3.7 3.8 3.9 3.10 3.11 pypy3.8
            #- name: Upload wheels
            #  uses: actions/upload-artifact@v3
            #  with:
            #    name: wheels
            #    path: dist

            #          #release:
            #          #  name: Release
            #          #  runs-on: ubuntu-latest
            #          #  if: "startsWith(github.ref, 'refs/tags/')"
            #          #  needs: [linux, windows, macos]

            #          #  steps:
            #          #    - uses: actions/download-artifact@v3
            #          #      with:
            #          #        name: wheels
            #          #    - name: Publish to PyPI
            #          #      uses: PyO3/maturin-action@v1
            #          #      env:
            #          #        MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
            #          #      with:
            #          #        command: upload
            #          #        args: --skip-existing *
