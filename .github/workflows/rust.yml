name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - uses: actions/cache@v2
      id: cache-lhapdf
      with:
        path: ~/prefix
        key: ${{ runner.os }}-lhapdf-${{ hashFiles('prefix/**') }}
        restore-keys: |
          ${{ runner.os }}-lhapdf-${{ hashFiles('prefix/**') }}
          ${{ runner.os }}-lhapdf
    - name: Set environment variables
      run: |
        echo "${HOME}/prefix/bin" >> $GITHUB_PATH
        echo "LD_LIBRARY_PATH=${HOME}/prefix/lib" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=${HOME}/prefix/lib/pkgconfig" >> $GITHUB_ENV
        echo "PYTHONPATH=${HOME}/prefix/lib/python3.7/site-packages" >> $GITHUB_ENV
    - name: Install LHAPDF 6.4.0
      run: |
        wget 'https://lhapdf.hepforge.org/downloads/?f=LHAPDF-6.4.0.tar.gz' -O LHAPDF-6.4.0.tar.gz
        tar xzf LHAPDF-6.4.0.tar.gz
        cd LHAPDF-6.4.0
        ./configure --prefix=${HOME}/prefix
        make -j
        make install
        lhapdf update
        lhapdf install NNPDF31_nlo_as_0118_luxqed
        lhapdf install NNPDF40_nnlo_as_01180
    - name: Install fastNLO 2.5.0 rev. 2826
      run: |
        wget 'https://fastnlo.hepforge.org/code/v25/fastnlo_toolkit-2.5.0-2826.tar.gz'
        tar xzf fastnlo_toolkit-2.5.0-2826.tar.gz
        cd fastnlo_toolkit-2.5.0-2826
        ./configure --prefix=${HOME}/prefix
        make -j
        make install
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        default: true
    - name: Compile tests
      uses: actions-rs/tarpaulin@v0.1
      with:
        args: --packages pineappl,pineappl_cli,pineappl_fastnlo --exclude-files pineappl_py/* --exclude-files pineappl/tests/* --command Build --no-run --verbose --features=fastnlo
        run-types: AllTargets
    - name: Run tests
      uses: actions-rs/tarpaulin@v0.1
      with:
        args: --packages pineappl,pineappl_cli,pineappl_fastnlo --exclude-files pineappl_py/* --exclude-files pineappl/tests/* --ignore-tests --follow-exec --skip-clean --timeout 300 --verbose --features=fastnlo
        run-types: AllTargets
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
    - name: Install cargo-c
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-c
    - name: Install PineAPPL's C API
      run: |
        ls -alR $HOME/prefix
        cargo cinstall -vv --prefix=$HOME/prefix --manifest-path pineappl_capi/Cargo.toml
    - name: Test C++ example
      run: |
        cd examples/cpp
        make
        ./dyaa
        test -f ./DY-LO-AA.pineappl
