name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install LHAPDF
      uses: ./.github/actions/lhapdf

    - name: Install APPLgrid 1.6.27
      run: |
        wget --no-verbose 'http://applgrid.hepforge.org/downloads/applgrid-1.6.27.tgz'
        tar xzf applgrid-1.6.27.tgz
        cd applgrid-1.6.27
        ./configure --prefix=${HOME}/prefix --disable-static --without-root
        make -j
        make install
        echo "APPL_IGRID_DIR=$(pwd)/src" >> $GITHUB_ENV

    - name: Install fastNLO 2.5.0 rev. 2826
      run: |
        wget --no-verbose 'https://fastnlo.hepforge.org/code/v25/fastnlo_toolkit-2.5.0-2826.tar.gz'
        tar xzf fastnlo_toolkit-2.5.0-2826.tar.gz
        cd fastnlo_toolkit-2.5.0-2826
        patch -p0 < "${GITHUB_WORKSPACE}"/.github/fix_fastnlo_warnings.patch
        ./configure --prefix=${HOME}/prefix --disable-static
        make -j
        make install
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        default: true
        toolchain: nightly
    - name: Download test data
      run: |
        wget -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCB_WP_7TEV.pineappl.lz4'
        wget -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCB_WP_7TEV.tar'
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --verbose -- --include-ignored --skip import_applgrid --skip import_photon_grid
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: Generate code coverage
      id: coverage
      uses: actions-rs/grcov@v0.1
      with:
        config: .github/grcov.yml
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        files: ${{steps.coverage.outputs.report}}
        token: ${{secrets.CODECOV_TOKEN}}
        flags: rust
