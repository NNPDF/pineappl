name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install LHAPDF
      uses: ./.github/actions/lhapdf

    - name: Install APPLgrid 1.6.27
      run: |
        wget --no-verbose 'http://applgrid.hepforge.org/downloads/applgrid-1.6.27.tgz'
        tar xzf applgrid-1.6.27.tgz
        cd applgrid-1.6.27
        ./configure --prefix=${HOME}/prefix --disable-static --without-root
        make -j
        make install
        echo "APPL_IGRID_DIR=$(pwd)/src" >> $GITHUB_ENV

    - name: Install fastNLO 2.5.0 rev. 2826
      run: |
        wget --no-verbose 'https://fastnlo.hepforge.org/code/v25/fastnlo_toolkit-2.5.0-2826.tar.gz'
        tar xzf fastnlo_toolkit-2.5.0-2826.tar.gz
        cd fastnlo_toolkit-2.5.0-2826
        patch -p0 < "${GITHUB_WORKSPACE}"/.github/fix_fastnlo_warnings.patch
        ./configure --prefix=${HOME}/prefix --disable-static
        make -j
        make install
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        default: true
        toolchain: nightly
    - name: Get test data
      id: cache-test-data
      uses: actions/cache@v3
      with:
        path: test-data
        key: test-data-v3
    - name: Download test data
      if: steps.cache-test-data.outputs.cache-hit != 'true'
      run: |
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/ATLASWPT11-Wplus_tot.root'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/E906nlo_bin_00.pineappl.lz4'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/E906nlo_bin_00.tar'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/FK_ATLASTTBARTOT13TEV.dat'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/FK_POSXDQ.dat'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCBWZMU7TEV_PI_part1.root'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCB_DY_8TEV.pineappl.lz4'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCB_DY_8TEV.tar'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCB_WP_7TEV.pineappl.lz4'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/LHCB_WP_7TEV.tar'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/NJetEvents_0-0-2.tab.gz'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/NUTEV_CC_NU_FE_SIGMARED.pineappl.lz4'
        wget --no-verbose --no-clobber -P test-data 'https://data.nnpdf.science/pineappl/test-data/NUTEV_CC_NU_FE_SIGMARED.tar'
        wget --no-verbose --no-clobber -P test-data 'https://ploughshare.web.cern.ch/ploughshare/db/applfast/applfast-h1-incjets-fnlo-arxiv-0706.3722/grids/applfast-h1-incjets-fnlo-arxiv-0706.3722-xsec000.tab.gz'
        wget --no-verbose --no-clobber -P test-data 'https://ploughshare.web.cern.ch/ploughshare/db/atlas/atlas-atlas-wpm-arxiv-1109.5141/grids/atlas-atlas-wpm-arxiv-1109.5141-xsec001.appl'
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --verbose -- --include-ignored --skip import_applgrid --skip import_photon_grid
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: Generate code coverage
      id: coverage
      uses: actions-rs/grcov@v0.1
      with:
        config: .github/grcov.yml
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      with:
        files: ${{steps.coverage.outputs.report}}
        token: ${{secrets.CODECOV_TOKEN}}
        flags: rust
